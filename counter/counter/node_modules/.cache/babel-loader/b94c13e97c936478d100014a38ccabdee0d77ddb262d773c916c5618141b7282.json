{"ast":null,"code":"var _jsxFileName = \"D:\\\\SoftDev_training\\\\React\\\\once again from hw\\\\employees_template\\\\counter\\\\counter\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inc = () => {\n      console.log(this.state.value);\n      this.setState(state => ({\n        value: state.value + 1\n      }));\n    };\n    this.dec = () => {\n      console.log(this.state.value);\n      this.setState(state => ({\n        value: state.value - 1\n      }));\n    };\n    this.state = {\n      value: props.data.initialValue\n    };\n  }\n  // incCounter = () => {\n  //   // if (this.state.counter < 50) {\n\n  //   // }\n  //   this.setState(state => ({\n  //     counter: state.counter + 1\n  //   }))\n  // }\n  // Используйте только стрелочную форму методов\n  // Почему? Подробный ответ будет в следующем уроке\n\n  render() {\n    // const {value} = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"counter\",\n        children: this.state.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.inc,\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.dec,\n          children: \" - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"RND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"RESET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n// 1) Начальное значение счетчика должно передаваться через props\n// 2) INC и DEC увеличивают и уменьшают счетчик соответственно на 1. Без ограничений, но можете добавить границу в -50/50. По достижению границы ничего не происходит\n// 3) RND изменяет счетчик в случайное значение от -50 до 50. Конструкцию можете прогуглить за 20 секунд :) Не зависит от предыдущего состояния\n// 4) RESET сбрасывает счетчик в 0 или в начальное значение из пропсов. Выберите один из вариантов\n// }\n\nexport default App;","map":{"version":3,"names":["logo","React","jsxDEV","_jsxDEV","App","Component","constructor","props","inc","console","log","state","value","setState","dec","data","initialValue","render","class","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["D:/SoftDev_training/React/once again from hw/employees_template/counter/counter/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends React.Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: props.data.initialValue,\n      }\n    }\n\n    inc = () => {\n      console.log(this.state.value);\n      this.setState(state => ({\n        value: state.value + 1\n      }))\n    }\n\n    dec = () => {\n      console.log(this.state.value);\n      this.setState(state => ({\n        value: state.value - 1\n      }))\n    }\n    \n    // incCounter = () => {\n    //   // if (this.state.counter < 50) {\n        \n    //   // }\n    //   this.setState(state => ({\n    //     counter: state.counter + 1\n    //   }))\n    // }\n    // Используйте только стрелочную форму методов\n    // Почему? Подробный ответ будет в следующем уроке\n    \n    render() {\n      // const {value} = this.state;\n      return (\n        <div class=\"app\">\n          <div class=\"counter\">{this.state.value}</div>\n          <div class=\"controls\">\n            <button onClick={this.inc}> + </button>\n            <button onClick={this.dec}> - </button>\n            <button>RND</button>\n            <button>RESET</button>\n          </div>\n        </div>\n      )\n    }\n  }\n  \n  \n  // 1) Начальное значение счетчика должно передаваться через props\n  // 2) INC и DEC увеличивают и уменьшают счетчик соответственно на 1. Без ограничений, но можете добавить границу в -50/50. По достижению границы ничего не происходит\n  // 3) RND изменяет счетчик в случайное значение от -50 до 50. Конструкцию можете прогуглить за 20 секунд :) Не зависит от предыдущего состояния\n  // 4) RESET сбрасывает счетчик в 0 или в начальное значение из пропсов. Выберите один из вариантов\n// }\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,SAASH,KAAK,CAACI,SAAS;EAC7BC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,GAAG,GAAG,MAAM;MACVC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;MAC7B,IAAI,CAACC,QAAQ,CAACF,KAAK,KAAK;QACtBC,KAAK,EAAED,KAAK,CAACC,KAAK,GAAG;MACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,KAEDE,GAAG,GAAG,MAAM;MACVL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;MAC7B,IAAI,CAACC,QAAQ,CAACF,KAAK,KAAK;QACtBC,KAAK,EAAED,KAAK,CAACC,KAAK,GAAG;MACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAjBC,IAAI,CAACD,KAAK,GAAG;MACXC,KAAK,EAAEL,KAAK,CAACQ,IAAI,CAACC;IACpB,CAAC;EACH;EAgBA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,MAAMA,CAAA,EAAG;IACP;IACA,oBACEd,OAAA;MAAKe,KAAK,EAAC,KAAK;MAAAC,QAAA,gBACdhB,OAAA;QAAKe,KAAK,EAAC,SAAS;QAAAC,QAAA,EAAE,IAAI,CAACR,KAAK,CAACC;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7CpB,OAAA;QAAKe,KAAK,EAAC,UAAU;QAAAC,QAAA,gBACnBhB,OAAA;UAAQqB,OAAO,EAAE,IAAI,CAAChB,GAAI;UAAAW,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCpB,OAAA;UAAQqB,OAAO,EAAE,IAAI,CAACV,GAAI;UAAAK,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCpB,OAAA;UAAAgB,QAAA,EAAQ;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpBpB,OAAA;UAAAgB,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;;AAGA;AACA;AACA;AACA;AACF;;AAEA,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}